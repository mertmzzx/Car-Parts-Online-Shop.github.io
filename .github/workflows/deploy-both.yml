# .github/workflows/deploy-both.yml
name: Deploy shop + admin to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

# required for the Pages deploy action
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  SHOP_DIR: CarPartsShop.Web/carpartsshop-client
  ADMIN_DIR: CarPartsShop.Web/carpartsshop-admin
  OUT_DIR: out

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          # cache both lockfiles (if you commit them)
          cache-dependency-path: |
            ${{ env.SHOP_DIR }}/package-lock.json
            ${{ env.ADMIN_DIR }}/package-lock.json

      # ---- Shop (client) ----
      - name: Install (shop)
        working-directory: ${{ env.SHOP_DIR }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-audit --no-fund
          fi

      - name: Build (shop)
        working-directory: ${{ env.SHOP_DIR }}
        run: npm run build

      # ---- Admin ----
      - name: Install (admin)
        working-directory: ${{ env.ADMIN_DIR }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-audit --no-fund
          fi

      - name: Build (admin)
        working-directory: ${{ env.ADMIN_DIR }}
        run: npm run build

      # ---- Prepare artifact for Pages ----
      - name: Prepare Pages artifact
        run: |
          rm -rf $OUT_DIR
          mkdir -p $OUT_DIR/repo/admin
          cp -r $SHOP_DIR/build/* $OUT_DIR/
          cp -r $ADMIN_DIR/build/* $OUT_DIR/repo/admin/
          # optional SPA 404 fallback if you keep one in public/
          if [ -f "$SHOP_DIR/public/404.html" ]; then cp "$SHOP_DIR/public/404.html" "$OUT_DIR/"; fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUT_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - id: deploy
        uses: actions/deploy-pages@v4
