# .github/workflows/deploy-both.yml
name: Deploy shop + admin to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

# Required by Pages actions
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  SHOP_DIR: CarPartsShop.Web/carpartsshop-client
  ADMIN_DIR: CarPartsShop.Web/carpartsshop-admin
  OUT_DIR: out

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            ${{ env.SHOP_DIR }}/package-lock.json
            ${{ env.ADMIN_DIR }}/package-lock.json

      # --- shop ---
      - name: Install (shop)
        working-directory: ${{ env.SHOP_DIR }}
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i --no-audit --no-fund; fi
      - name: Build (shop)
        working-directory: ${{ env.SHOP_DIR }}
        run: npm run build

      # --- admin ---
      - name: Install (admin)
        working-directory: ${{ env.ADMIN_DIR }}
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i --no-audit --no-fund; fi
      - name: Build (admin)
        working-directory: ${{ env.ADMIN_DIR }}
        run: npm run build

      # --- assemble Pages artifact ---
      - name: Prepare Pages artifact
        run: |
          set -e
          rm -rf "$OUT_DIR"
          mkdir -p "$OUT_DIR/admin"
          cp -r "$SHOP_DIR/build/"*  "$OUT_DIR/"
          cp -r "$ADMIN_DIR/build/"* "$OUT_DIR/admin/"
          # optional SPA fallbacks
          if [ -f "$SHOP_DIR/public/404.html" ]; then cp "$SHOP_DIR/public/404.html" "$OUT_DIR/"; fi
          if [ -f "$ADMIN_DIR/public/404.html" ]; then cp "$ADMIN_DIR/public/404.html" "$OUT_DIR/admin/"; fi

      - name: Debug artifact content
        run: |
          echo "Files that will be deployed:"
          find "$OUT_DIR" -maxdepth 3 -type f -print

      # IMPORTANT: this must run, and it uploads an artifact named "github-pages"
      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUT_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
