# .github/workflows/deploy-both.yml
name: Deploy shop + admin to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

# required for the Pages deploy action
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  SHOP_DIR: CarPartsShop.Web/carpartsshop-client
  ADMIN_DIR: CarPartsShop.Web/carpartsshop-admin
  OUT_DIR: out

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          # cache both lockfiles (if you commit them)
          cache-dependency-path: |
            ${{ env.SHOP_DIR }}/package-lock.json
            ${{ env.ADMIN_DIR }}/package-lock.json

      # ---- Shop (client) ----
      - name: Install (shop)
        working-directory: ${{ env.SHOP_DIR }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-audit --no-fund
          fi

      - name: Build (shop)
        working-directory: ${{ env.SHOP_DIR }}
        run: npm run build

      # ---- Admin ----
      - name: Install (admin)
        working-directory: ${{ env.ADMIN_DIR }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-audit --no-fund
          fi

      - name: Build (admin)
        working-directory: ${{ env.ADMIN_DIR }}
        run: npm run build

          # ---- Prepare artifact for Pages ----
      - name: Prepare Pages artifact
        run: |
          set -e

          # fresh output folder
          rm -rf "$OUT_DIR"
          mkdir -p "$OUT_DIR"

          # copy shop to site root (note the trailing /. so *everything* copies)
          cp -r "$SHOP_DIR/build/." "$OUT_DIR/"

          # copy admin into /admin (again, trailing /. matters)
          mkdir -p "$OUT_DIR/admin"
          cp -r "$ADMIN_DIR/build/." "$OUT_DIR/admin/"

          # make sure Jekyll doesn't interfere
          touch "$OUT_DIR/.nojekyll"

          # SPA fallbacks
          # root SPA 404 (optional, if you keep one in client/public)
          if [ -f "$SHOP_DIR/public/404.html" ]; then
            cp "$SHOP_DIR/public/404.html" "$OUT_DIR/404.html"
          fi
          # admin SPA 404 (serve admin index for deep links)
          if [ -f "$OUT_DIR/admin/index.html" ]; then
            cp "$OUT_DIR/admin/index.html" "$OUT_DIR/admin/404.html"
          fi

          echo "==== OUT_DIR (first 2 levels) ===="
          find "$OUT_DIR" -maxdepth 2 -type f | sed "s|$OUT_DIR|.|"

